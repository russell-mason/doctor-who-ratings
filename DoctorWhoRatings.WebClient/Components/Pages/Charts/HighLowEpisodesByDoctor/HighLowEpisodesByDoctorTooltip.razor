<div class="tooltip">
    <div class="block">
        <div class="actor">@DataPoint.Actor</div>
        
        <div class="episodes">
            <span class="highlighted-value">@DataPoint.EpisodeCount</span>
            <span>
                @if (DataPoint.EpisodeCount == 1)
                {
                    <text>episode</text>
                }
                else
                {
                    <text>episodes</text>
                }
            </span>
        </div>
    </div>
    
    <div class="break"></div>

    <div class="block">
        <div class="high-low">@(IsHigh ? "Highest rated episode" : "Lowest rated episode")</div>

        <div class="story">@HighLowDataPoint.StoryTitle</div>

        @if (HighLowDataPoint.StoryPartTitle != null)
        {
            <div>@HighLowDataPoint.StoryPartTitle</div>
        }
    </div>

    <div class="break"></div>

    <div class="block icon-block">
        <img class="icon" src="images/calculator.svg" alt="Calculation method" />
        <div class="calculation-method">@(DataOptions.CalculationMethod.ToString())</div>
    </div>

    <div class="break"></div>
    
    <div class="break"></div>

    @if (IsExcess)
    {
        <div class="block icon-block series-target">
            @{
                var excess = IsConsolidatedExcess
                    ? HighLowDataPoint.ConsolidatedExcessRatings
                    : HighLowDataPoint.ExtendedExcessRatings;
            }

            <img class="icon" src="images/target.svg" alt="Ratings" />
            <div>
                <div>
                    <span class="highlighted-value">@FormatNumber(excess)</span>
                    <span> million additional viewers</span>
                </div>
            </div>
        </div>
    }

    <div class="block icon-block">
        <img class="icon" src="images/view.svg" alt="Ratings" />
        <div>
            @if (HighLowDataPoint.OvernightRatings != null)
            {
                <div>
                    <span class="highlighted-value">@FormatNumber(HighLowDataPoint.OvernightRatings)</span>
                    <span> million overnight viewers</span>
                </div>
            }

            @if (HighLowDataPoint.ConsolidatedRatings != null)
            {
                <div class="line-space">
                    <span class="highlighted-value">@FormatNumber(HighLowDataPoint.ConsolidatedRatings)</span>
                    <span> million viewers after seven days</span>
                </div>
            }

            @if (HighLowDataPoint.ExtendedRatings != null)
            {
                <div class="line-space">
                    <span class="highlighted-value">@FormatNumber(HighLowDataPoint.ExtendedRatings)</span>
                    <span> million viewers after seven days on all devices</span>
                </div>
            }
        </div>
    </div>
</div>

<div class="tooltip secondary">
    <div class="population-adjusted">Population adjusted</div>

    @if (IsExcess)
    {
        <div class="block icon-block series-target">
            @{
                var adjustedExcess = IsConsolidatedExcess
                    ? HighLowDataPoint.PopulationAdjustedConsolidatedExcessRatings
                    : HighLowDataPoint.PopulationAdjustedExtendedExcessRatings;
            }

            <img class="icon" src="images/target.svg" alt="Ratings" />
            <div>
                <div>
                    <span class="highlighted-value">@FormatNumber(adjustedExcess)</span>
                    <span> million additional viewers</span>
                </div>
            </div>
        </div>
    }

    <div class="block icon-block">
        <img class="icon" src="images/view.svg" alt="Ratings" />
        <div>
            @if (HighLowDataPoint.PopulationAdjustedOvernightRatings != null)
            {
                <div>
                    <span class="highlighted-value">@FormatNumber(HighLowDataPoint.PopulationAdjustedOvernightRatings)</span>
                    <span> million overnight viewers</span>
                </div>
            }

            @if (HighLowDataPoint.PopulationAdjustedConsolidatedRatings != null)
            {
                <div class="line-space">
                    <span class="highlighted-value">@FormatNumber(HighLowDataPoint.PopulationAdjustedConsolidatedRatings)</span>
                    <span> million viewers after seven days</span>
                </div>
            }

            @if (HighLowDataPoint.PopulationAdjustedExtendedRatings != null)
            {
                <div class="line-space">
                    <span class="highlighted-value">@FormatNumber(HighLowDataPoint.PopulationAdjustedExtendedRatings)</span>
                    <span> million viewers after seven days on all devices</span>
                </div>
            }
        </div>
    </div>
</div>

@code {
    private const int ConsolidatedSeriesIndex = 1;
    private const int SeriesPerDataPoint = 3;

    [Parameter]
    public required HighLowEpisodesByDoctorDataPoint DataPoint { get; set; }

    [Parameter]
    public required int SeriesIndex { get; set; }

    [Parameter]
    public required HighLowEpisodesByDoctorDataOptions DataOptions { get; set; }

    private bool IsHigh => SeriesIndex / SeriesPerDataPoint == 0;

    private bool IsExcess => SeriesIndex % SeriesPerDataPoint != 0;

    private bool IsConsolidatedExcess => SeriesIndex % SeriesPerDataPoint == 1;

    private HighLowEpisodeByDoctorDataPoint HighLowDataPoint => IsHigh ? DataPoint.HighEpisodeDataPoint : DataPoint.LowEpisodeDataPoint;

    private string FormatNumber(decimal? number) => number?.ToString("0.00") ?? "N/A";
}
