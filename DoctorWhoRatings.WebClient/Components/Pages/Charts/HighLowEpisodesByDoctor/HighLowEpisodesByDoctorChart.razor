@page "/charts/high-low-by-doctor"
@inject IHighLowEpisodesByDoctorDataGenerator HighLowEpisodesByDoctorDataGenerator

<PageTitle>High/Low by Doctor - Doctor Who Ratings</PageTitle>

<ChartHeading Title="@HighLowEpisodesByDoctorData.Title"
              Description="@HighLowEpisodesByDoctorData.Description" />

<Chart>
    <ApexChart @ref="Chart"
               TItem="HighLowEpisodesByDoctorDataPoint"
               Title="@HighLowEpisodesByDoctorData.YAxisTitle"
               Options="ChartOptions"
               Height="@("100%")"
               Width="@("100%")">
            
        <ApexPointTooltip>
            <HighLowEpisodesByDoctorTooltip DataPoint="@context.DataPoint.Items.First()"
                                            SeriesIndex="@context.SeriesIndex"
                                            DataOptions="DataOptions" />
        </ApexPointTooltip>
        
        <ChildContent>
            <ApexPointSeries TItem="HighLowEpisodesByDoctorDataPoint"
                             Items="DataSource.DataPoints"
                             Name="@HighLowEpisodesByDoctorData.SeriesTitles[0]"
                             Group="High"
                             SeriesType="SeriesType.Bar"
                             XValue="dataPoint => dataPoint.Actor"
                             YValue="dataPoint => dataPoint.HighEpisodeDataPoint.CalculatedOvernightRatings ?? 0" />

            <ApexPointSeries TItem="HighLowEpisodesByDoctorDataPoint"
                             Items="DataSource.DataPoints"
                             Name="@HighLowEpisodesByDoctorData.SeriesTitles[1]"
                             Group="High"
                             SeriesType="SeriesType.Bar"
                             XValue="dataPoint => dataPoint.Actor"
                             YValue="dataPoint => dataPoint.HighEpisodeDataPoint.CalculatedConsolidatedExcessRatings ?? 0" />

            <ApexPointSeries TItem="HighLowEpisodesByDoctorDataPoint"
                             Items="DataSource.DataPoints"
                             Name="@HighLowEpisodesByDoctorData.SeriesTitles[2]"
                             Group="High"
                             SeriesType="SeriesType.Bar"
                             XValue="dataPoint => dataPoint.Actor"
                             YValue="dataPoint => dataPoint.HighEpisodeDataPoint.CalculatedExtendedExcessRatings ?? 0" />

            <ApexPointSeries TItem="HighLowEpisodesByDoctorDataPoint"
                             Items="DataSource.DataPoints"
                             Name="@HighLowEpisodesByDoctorData.SeriesTitles[3]"
                             Group="Low"
                             SeriesType="SeriesType.Bar"
                             XValue="dataPoint => dataPoint.Actor"
                             YValue="dataPoint => dataPoint.LowEpisodeDataPoint.CalculatedOvernightRatings ?? 0" />

            <ApexPointSeries TItem="HighLowEpisodesByDoctorDataPoint"
                             Items="DataSource.DataPoints"
                             Name="@HighLowEpisodesByDoctorData.SeriesTitles[4]"
                             Group="Low"
                             SeriesType="SeriesType.Bar"
                             XValue="dataPoint => dataPoint.Actor"
                             YValue="dataPoint => dataPoint.LowEpisodeDataPoint.CalculatedConsolidatedExcessRatings ?? 0" />

            <ApexPointSeries TItem="HighLowEpisodesByDoctorDataPoint"
                             Items="DataSource.DataPoints"
                             Name="@HighLowEpisodesByDoctorData.SeriesTitles[5]"
                             Group="Low"
                             SeriesType="SeriesType.Bar"
                             XValue="dataPoint => dataPoint.Actor"
                             YValue="dataPoint => dataPoint.LowEpisodeDataPoint.CalculatedExtendedExcessRatings ?? 0" />
        </ChildContent>
    </ApexChart>
</Chart>

<ChartOptions>
    <ChartOptionsSet>
        <span>Calculate using</span>
        
        <ChartOptionsRadio @bind-Value="DataOptions.CalculationMethod"
                           Id="overnight" Group="ratingsOption"
                           CheckedValue="@HighLowEpisodesCalculationMethod.Overnight"
                           AfterChanged="AfterOptionChanged">
        </ChartOptionsRadio>
        
        <ChartOptionsRadio @bind-Value="DataOptions.CalculationMethod"
                           Id="consolidated" Group="ratingsOption"
                           CheckedValue="@HighLowEpisodesCalculationMethod.Consolidated"
                           AfterChanged="AfterOptionChanged">
        </ChartOptionsRadio>
        
        <ChartOptionsRadio @bind-Value="DataOptions.CalculationMethod"
                           Id="extended" Group="ratingsOption"
                           CheckedValue="@HighLowEpisodesCalculationMethod.Extended"
                           AfterChanged="AfterOptionChanged">
        </ChartOptionsRadio>
    </ChartOptionsSet>

    <ChartOptionsSet>
        <ChartOptionsCheckbox @bind-Value="DataOptions.AdjustForCurrentPopulation"
                              Id="population" Label="Adjust relative to current population"
                              AfterChanged="AfterOptionChanged">
        </ChartOptionsCheckbox>
    </ChartOptionsSet>
</ChartOptions>

@code {
    private ApexChart<HighLowEpisodesByDoctorDataPoint> Chart { get; set; } = default!;

    private ApexChartOptions<HighLowEpisodesByDoctorDataPoint> ChartOptions { get; } = HighLowEpisodesByDoctorChartOptions.Defaults;

    private HighLowEpisodesByDoctorData DataSource { get; set; } = default!;

    private HighLowEpisodesByDoctorDataOptions DataOptions { get; } = new();

    protected override void OnInitialized() => DataSource = HighLowEpisodesByDoctorDataGenerator.Generate(DataOptions);

    private async Task AfterOptionChanged()
    {
        DataSource = HighLowEpisodesByDoctorDataGenerator.Generate(DataOptions);

        StateHasChanged();

        await Chart.UpdateSeriesAsync();
    }
}
