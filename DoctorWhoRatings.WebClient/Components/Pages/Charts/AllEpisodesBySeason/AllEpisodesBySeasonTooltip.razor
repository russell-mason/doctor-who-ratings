<ChartTooltip>
    <ChartTooltipEpisodeSection Actor="@DataPoint.Actor"
                                StoryTitle="@DataPoint.StoryTitle"
                                PartTitle="@DataPoint.PartTitle"
                                SeasonFormatDescription="@DataPoint.SeasonFormatDescription"
                                Season="@DataPoint.Season"
                                OriginalAirDate="@DataPoint.OriginalAirDate" />

    <ChartTooltipBreak />

    <ChartTooltipRatingsSection TargetRatings="@TargetExcessRatings"
                                OvernightRatings="@DataPoint.OvernightRatings"
                                ConsolidatedRatings="@DataPoint.ConsolidatedRatings"
                                ExtendedRatings="@DataPoint.ExtendedRatings" />

    <ChartTooltipNoteSection Note="@DataPoint.Note" />
</ChartTooltip>

@if (ShowPopulationAdjusted)
{
    <ChartSecondaryTooltip>
        <ChartTooltipRatingsSection Title="Population adjusted"
                                    TargetRatings="@TargetPopulationAdjustedExcessRatings"
                                    OvernightRatings="@DataPoint.PopulationAdjustedOvernightRatings"
                                    ConsolidatedRatings="@DataPoint.PopulationAdjustedConsolidatedRatings"
                                    ExtendedRatings="@DataPoint.PopulationAdjustedExtendedRatings" />
    </ChartSecondaryTooltip>
}

@code {
    private const int ConsolidatedSeriesIndex = 1;
    private const int ExtendedSeriesIndex = 2;

    [Parameter]
    public required EpisodeDataPoint DataPoint { get; set; }

    [Parameter]
    public required int SeriesIndex { get; set; }

    [Parameter]
    public bool ShowPopulationAdjusted { get; set; }

    private decimal? TargetExcessRatings => SeriesIndex switch
    {
        ConsolidatedSeriesIndex => DataPoint.ConsolidatedExcessRatings,
        ExtendedSeriesIndex => DataPoint.ExtendedExcessRatings,
        _ => null
    };

    private decimal? TargetPopulationAdjustedExcessRatings => SeriesIndex switch
    {
        ConsolidatedSeriesIndex => DataPoint.PopulationAdjustedConsolidatedExcessRatings,
        ExtendedSeriesIndex => DataPoint.PopulationAdjustedExtendedExcessRatings,
        _ => null
    };
}
