@page "/charts/total-hours-watched-by-doctor"
@inject IShareByHoursWatchedDataPointGenerator DataPointGenerator

<PageTitle>@ShareByHoursWatchedChartCaptions.Title - @Application.Name</PageTitle>

<ChartHeading Title="@ShareByHoursWatchedChartCaptions.Title"
              Description="@(ShareByHoursWatchedChartCaptions.Description + " *")" />

<FullScreenZone>
    <Chart>
        <ApexChart @ref="Chart"
                   TItem="ShareByHoursWatchedDataPoint"
                   Title="@ShareByHoursWatchedChartCaptions.Title"
                   Options="ChartOptions"
                   Height="@("100%")"
                   Width="@("100%")">

            <ApexPointTooltip>
                <ShareByHoursWatchedTooltip DataPoint="@context.DataPoint.Items.First()"
                                            DataOptions="DataOptions"
                                            PercentageShare="@GetPercentageShare(@context.DataPoint.Items.First())" />
            </ApexPointTooltip>

            <ChildContent>
                <ApexPointSeries TItem="ShareByHoursWatchedDataPoint"
                                 Items="DataPoints"
                                 SeriesType="SeriesType.Pie"
                                 XValue="dataPoint => dataPoint.UnambiguousActor"
                                 YValue="dataPoint => dataPoint.CalculatedTotalHoursWatched"
                                 ShowDataLabels />
            </ChildContent>
        </ApexChart>
    </Chart>

    <ChartOptions>
        <ChartOptionsGroup>
            <ChartOptionsText Label="Calculate using" />

            <ChartOptionsRadio @bind-Value="DataOptions.CalculationMethod"
                               Id="overnight" Group="ratingsOption"
                               CheckedValue="@ShareByHoursWatchedCalculationMethod.Overnight"
                               AfterValueChanged="AfterOptionChanged">
            </ChartOptionsRadio>

            <ChartOptionsRadio @bind-Value="DataOptions.CalculationMethod"
                               Id="consolidated" Group="ratingsOption"
                               CheckedValue="@ShareByHoursWatchedCalculationMethod.Consolidated"
                               AfterValueChanged="AfterOptionChanged">
            </ChartOptionsRadio>

            <ChartOptionsRadio @bind-Value="DataOptions.CalculationMethod"
                               Id="extended" Group="ratingsOption"
                               CheckedValue="@ShareByHoursWatchedCalculationMethod.Extended"
                               AfterValueChanged="AfterOptionChanged">
            </ChartOptionsRadio>
        </ChartOptionsGroup>
    </ChartOptions>
</FullScreenZone>

<Info>
    * Ratings are based on "views", which can be as little as
    <a href="https://www.radiotimes.com/tv/entertainment/how-do-uk-tv-viewing-figures-and-overnight-ratings-work/" target="_blank">3 minutes</a>.
    Beyond that, it's impossible to know how much of an episode someone actually watched, so this is a simple
    calculation based on <strong>ratings * episode length</strong>.
</Info>

@code {
    private ApexChart<ShareByHoursWatchedDataPoint> Chart { get; set; } = default!;

    private ApexChartOptions<ShareByHoursWatchedDataPoint> ChartOptions { get; } = ShareByHoursWatchedChartOptions.Defaults;

    private ShareByHoursWatchedDataOptions DataOptions { get; } = new();

    private List<ShareByHoursWatchedDataPoint> DataPoints { get; set; } = default!;

    private decimal GetPercentageShare(ShareByHoursWatchedDataPoint currentDataPoint)
    {
        var total = DataPoints.Sum(dataPoint => dataPoint.CalculatedTotalHoursWatched);
        var percent = currentDataPoint.CalculatedTotalHoursWatched / total * 100;

        return percent;
    }

    protected override void OnInitialized() => DataPoints = DataPointGenerator.Generate(DataOptions);

    private async Task AfterOptionChanged()
    {
        DataPoints = DataPointGenerator.Generate(DataOptions);

        await Chart.UpdateSeriesAsync();
    }
}
