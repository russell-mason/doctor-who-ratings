@page "/charts/by-era"
@inject IShareByEraDataPointGenerator DataPointGenerator

<PageTitle>@ShareByEraChartCaptions.Title - @Application.Name</PageTitle>

<ChartHeading Title="@ShareByEraChartCaptions.Title"
              Description="@ShareByEraChartCaptions.Description" />

<FullScreenZone>
    <Chart>
        <ApexChart @ref="Chart"
                   TItem="ShareByEraDataPoint"
                   Title="@ShareByEraChartCaptions.Title"
                   Options="ChartOptions"
                   Height="@("100%")"
                   Width="@("100%")">

            <ApexPointTooltip>
                <ShareByEraTooltip DataPoint="@context.DataPoint.Items.First()"
                                   DataOptions="DataOptions"
                                   PercentageShare="@GetPercentageShare(@context.DataPoint.Items.First())" />
            </ApexPointTooltip>

            <ChildContent>
                <ApexPointSeries TItem="ShareByEraDataPoint"
                                 Items="DataPoints"
                                 SeriesType="SeriesType.Pie"
                                 XValue="dataPoint => dataPoint.Era"
                                 YValue="dataPoint => dataPoint.CalculatedRatings"
                                 ShowDataLabels />
            </ChildContent>
        </ApexChart>
    </Chart>

    <ChartOptions>
        <ChartOptionsGroup>
            <ChartOptionsText Label="Calculate using" />

            <ChartOptionsRadio @bind-Value="DataOptions.CalculationMethod"
                               Id="total" Group="ratingsOption" Label="@ShareByEraCalculationMethod.Sum.Humanize()"
                               CheckedValue="@ShareByEraCalculationMethod.Sum"
                               AfterValueChanged="AfterOptionChanged">
            </ChartOptionsRadio>

            <ChartOptionsRadio @bind-Value="DataOptions.CalculationMethod"
                               Id="perEpisode" Group="ratingsOption" Label="@ShareByEraCalculationMethod.MeanPerEpisode.Humanize()"
                               CheckedValue="@ShareByEraCalculationMethod.MeanPerEpisode"
                               AfterValueChanged="AfterOptionChanged">
            </ChartOptionsRadio>

            <ChartOptionsRadio @bind-Value="DataOptions.CalculationMethod"
                               Id="perHour" Group="ratingsOption" Label="@ShareByEraCalculationMethod.MeanPerHour.Humanize()"
                               CheckedValue="@ShareByEraCalculationMethod.MeanPerHour"
                               AfterValueChanged="AfterOptionChanged">
            </ChartOptionsRadio>
        </ChartOptionsGroup>

        <ChartOptionsGroup>
            <ChartOptionsText Label="Over" />

            <ChartOptionsRadio @bind-Value="DataOptions.OverCalculationMethod"
                               Id="overnight" Group="overOption"
                               CheckedValue="@ShareByEraOverCalculationMethod.Overnight"
                               AfterValueChanged="AfterOptionChanged">
            </ChartOptionsRadio>

            <ChartOptionsRadio @bind-Value="DataOptions.OverCalculationMethod"
                               Id="consolidated" Group="overOption"
                               CheckedValue="@ShareByEraOverCalculationMethod.Consolidated"
                               AfterValueChanged="AfterOptionChanged">
            </ChartOptionsRadio>

            <ChartOptionsRadio @bind-Value="DataOptions.OverCalculationMethod"
                               Id="extended" Group="overOption"
                               CheckedValue="@ShareByEraOverCalculationMethod.Extended"
                               AfterValueChanged="AfterOptionChanged">
            </ChartOptionsRadio>
        </ChartOptionsGroup>
    </ChartOptions>
</FullScreenZone>

@code {
    private ApexChart<ShareByEraDataPoint> Chart { get; set; } = default!;

    private ApexChartOptions<ShareByEraDataPoint> ChartOptions { get; } = ShareByEraChartOptions.Defaults;

    private ShareByEraDataOptions DataOptions { get; } = new();

    private List<ShareByEraDataPoint> DataPoints { get; set; } = default!;

    private decimal GetPercentageShare(ShareByEraDataPoint currentDataPoint)
    {
        var total = DataPoints.Sum(dataPoint => dataPoint.CalculatedRatings);
        var percent = currentDataPoint.CalculatedRatings / total * 100;

        return percent;
    }

    protected override void OnInitialized() => DataPoints = DataPointGenerator.Generate(DataOptions);

    private async Task AfterOptionChanged()
    {
        DataPoints = DataPointGenerator.Generate(DataOptions);

        await Chart.UpdateSeriesAsync();
    }
}
