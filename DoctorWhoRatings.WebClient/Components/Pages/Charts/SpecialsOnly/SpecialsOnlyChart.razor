@page "/charts/specials-only"
@inject IEpisodesDataPointGenerator DataPointGenerator

<PageTitle>@SpecialsOnlyChartCaptions.Title - @Application.Name</PageTitle>

<ChartHeading Title="@SpecialsOnlyChartCaptions.Title"
              Description="@SpecialsOnlyChartCaptions.Description" />

<Chart>
    <ApexChart @ref="Chart" 
               TItem="EpisodeDataPoint"
               Title="@SpecialsOnlyChartCaptions.YAxisTitle"
               Options="ChartOptions"
               Height="@("100%")"
               Width="@("100%")">

        <ApexPointTooltip>
            <SpecialsOnlyTooltip DataPoint="@context.DataPoint.Items.First()"
                                 SeriesIndex="@context.SeriesIndex"
                                 ShowPopulationAdjusted="@DataOptions.AdjustForCurrentPopulation" />
        </ApexPointTooltip>

        <ChildContent>
            <ApexPointSeries TItem="EpisodeDataPoint"
                             Items="DataPoints"
                             Name="@SpecialsOnlyChartCaptions.SeriesTitles[0]"
                             SeriesType="SeriesType.Bar"
                             XValue="dataPoint => dataPoint.OriginalAirDate"
                             YValue="dataPoint => DataOptions.AdjustForCurrentPopulation ? dataPoint.PopulationAdjustedOvernightRatings : dataPoint.OvernightRatings" />
            
            <ApexPointSeries TItem="EpisodeDataPoint"
                             Items="DataPoints"
                             Name="@SpecialsOnlyChartCaptions.SeriesTitles[1]"
                             SeriesType="SeriesType.Bar"
                             XValue="dataPoint => dataPoint.OriginalAirDate"
                             YValue="dataPoint => DataOptions.AdjustForCurrentPopulation ? dataPoint.PopulationAdjustedConsolidatedExcessRatings : dataPoint.ConsolidatedExcessRatings" />
            
            <ApexPointSeries TItem="EpisodeDataPoint"
                             Items="DataPoints"
                             Name="@SpecialsOnlyChartCaptions.SeriesTitles[2]"
                             SeriesType="SeriesType.Bar"
                             XValue="dataPoint => dataPoint.OriginalAirDate"
                             YValue="dataPoint => DataOptions.AdjustForCurrentPopulation ? dataPoint.PopulationAdjustedExtendedExcessRatings : dataPoint.ExtendedExcessRatings" />
        </ChildContent>
    </ApexChart>
</Chart>

<ChartOptions>
    <ChartOptionsGroup>
        <ChartOptionsCheckbox @bind-Value="DataOptions.AdjustForCurrentPopulation"
                              Id="population" Label="Adjust relative to current population"
                              AfterValueChanged="AfterOptionChanged">
        </ChartOptionsCheckbox>
    </ChartOptionsGroup>
</ChartOptions>

@code {
    private ApexChart<EpisodeDataPoint> Chart { get; set; } = default!;

    private ApexChartOptions<EpisodeDataPoint> ChartOptions { get; set; } = SpecialsOnlyChartOptions.Defaults;

    private EpisodesDataOptions DataOptions { get; } = new() { EpisodeFormatId = EpisodeFormats.Special };  // Specials only

    private List<EpisodeDataPoint> DataPoints { get; set; } = default!;

    protected override void OnInitialized()
    {
        DataPoints = DataPointGenerator.Generate(DataOptions);
    }

    private async Task AfterOptionChanged()
    {
        DataPoints = DataPointGenerator.Generate(DataOptions);

        await Chart.UpdateSeriesAsync();
    }
}
